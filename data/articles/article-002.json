{
  "id": "article-002",
  "title": "Pokročilý CSS Grid - Responzivní layouty",
  "date": "2025-07-18",
  "description": "Ovládněte CSS Grid a vytvářejte komplexní responzivní layouty s minimálním úsilím. Od základů až po pokročilé techniky včetně subgridu.",
  "tags": ["CSS", "Grid", "Design"],
  "category": "styling",
  "markdown": "# Pokročilý CSS Grid - Responzivní layouty\n\nCSS Grid je mocný nástroj pro vytváření komplexních layoutů webových stránek. Představuje dvourozměrný systém pro rozmístění prvků na stránce.\n\n## Základy CSS Grid\n\nGrid container vytvoříme pomocí `display: grid`:\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 2fr 1fr;\n  grid-template-rows: auto 1fr auto;\n  gap: 20px;\n}\n```\n\n## Grid Template Areas\n\nPro intuitivnější definici layoutu můžeme použít pojmenované oblasti:\n\n```css\n.container {\n  display: grid;\n  grid-template-areas:\n    \"header header header\"\n    \"sidebar main aside\"\n    \"footer footer footer\";\n}\n\n.header { grid-area: header; }\n.sidebar { grid-area: sidebar; }\n.main { grid-area: main; }\n```\n\n## Responzivní Grid\n\n### Auto-fit a Auto-fill\n\n```css\n.gallery {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n}\n```\n\n### Media Queries s Grid\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr;\n}\n\n@media (min-width: 768px) {\n  .container {\n    grid-template-columns: 250px 1fr;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    grid-template-columns: 250px 1fr 250px;\n  }\n}\n```\n\n## Pokročilé techniky\n\n### Grid Lines a Spanning\n\n```css\n.item {\n  grid-column: 1 / 3; /* Zabere sloupce 1 a 2 */\n  grid-row: span 2; /* Roztáhne se přes 2 řádky */\n}\n```\n\n### Subgrid\n\n```css\n.parent {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n.child {\n  display: grid;\n  grid-template-columns: subgrid;\n}\n```\n\n## Praktické příklady\n\n### Dashboard Layout\n\n```css\n.dashboard {\n  display: grid;\n  grid-template-columns: 200px 1fr 300px;\n  grid-template-rows: 60px 1fr 40px;\n  height: 100vh;\n  gap: 1px;\n  background-color: #ddd;\n}\n```\n\n### Card Grid\n\n```css\n.cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 2rem;\n}\n```\n\n## Výhody CSS Grid\n\n1. **Dvourozměrný layout** - kontrola nad řádky i sloupci\n2. **Méně HTML** - není potřeba wrapper divů\n3. **Flexibilní jednotky** - fr, %, px, auto\n4. **Gap podpora** - jednoduchý spacing\n5. **Pojmenované oblasti** - srozumitelný kód\n\n## Grid vs Flexbox\n\n- **Grid** - pro celkový layout stránky\n- **Flexbox** - pro jednořádkové/jednosloupcové komponenty\n- Často se kombinují dohromady\n\n## Browser Support\n\nCSS Grid má výbornou podporu ve všech moderních prohlížečích. Pro starší prohlížeče použijte fallback s Flexboxem nebo floaty.",
  "metadata": {
    "author": "David Hezký",
    "readingTime": "7 min"
  }
}